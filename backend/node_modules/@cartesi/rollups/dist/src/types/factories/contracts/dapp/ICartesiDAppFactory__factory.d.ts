import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ICartesiDAppFactory, ICartesiDAppFactoryInterface } from "../../../contracts/dapp/ICartesiDAppFactory";
export declare class ICartesiDAppFactory__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "contract IConsensus";
            readonly name: "consensus";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "dappOwner";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "templateHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "contract CartesiDApp";
            readonly name: "application";
            readonly type: "address";
        }];
        readonly name: "ApplicationCreated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IConsensus";
            readonly name: "_consensus";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_dappOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_templateHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "calculateApplicationAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IConsensus";
            readonly name: "_consensus";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_dappOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_templateHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "newApplication";
        readonly outputs: readonly [{
            readonly internalType: "contract CartesiDApp";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IConsensus";
            readonly name: "_consensus";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_dappOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_templateHash";
            readonly type: "bytes32";
        }];
        readonly name: "newApplication";
        readonly outputs: readonly [{
            readonly internalType: "contract CartesiDApp";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ICartesiDAppFactoryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ICartesiDAppFactory;
}
